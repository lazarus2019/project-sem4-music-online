package com.demo.entities;
// Generated Nov 21, 2021, 7:14:54 AM by Hibernate Tools 5.1.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Track generated by hbm2java
 */
@Entity
@Table(name = "track", catalog = "music_app")
public class Track implements java.io.Serializable {

	private Integer id;
	private Genres genres;
	private String fileName;
	private String title;
	private String lyrics;
	private String artists;
	private String thumbnail;
	private int likes;
	private Date songTime;
	private int numberOfListens;
	private boolean isPremium;
	private Date publishDate;
	private boolean isHidden;
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<PlaylistTrack> playlistTracks = new HashSet<PlaylistTrack>(0);
	private Set<ArtistTrack> artistTracks = new HashSet<ArtistTrack>(0);

	public Track() {
	}

	public Track(Genres genres, String fileName, String title, String lyrics, String artists, String thumbnail,
			int likes, Date songTime, int numberOfListens, boolean isPremium, Date publishDate, boolean isHidden) {
		this.genres = genres;
		this.fileName = fileName;
		this.title = title;
		this.lyrics = lyrics;
		this.artists = artists;
		this.thumbnail = thumbnail;
		this.likes = likes;
		this.songTime = songTime;
		this.numberOfListens = numberOfListens;
		this.isPremium = isPremium;
		this.publishDate = publishDate;
		this.isHidden = isHidden;
	}

	public Track(Genres genres, String fileName, String title, String lyrics, String artists, String thumbnail,
			int likes, Date songTime, int numberOfListens, boolean isPremium, Date publishDate, boolean isHidden,
			Set<Comment> comments, Set<PlaylistTrack> playlistTracks, Set<ArtistTrack> artistTracks) {
		this.genres = genres;
		this.fileName = fileName;
		this.title = title;
		this.lyrics = lyrics;
		this.artists = artists;
		this.thumbnail = thumbnail;
		this.likes = likes;
		this.songTime = songTime;
		this.numberOfListens = numberOfListens;
		this.isPremium = isPremium;
		this.publishDate = publishDate;
		this.isHidden = isHidden;
		this.comments = comments;
		this.playlistTracks = playlistTracks;
		this.artistTracks = artistTracks;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "genres_id", nullable = false)
	public Genres getGenres() {
		return this.genres;
	}

	public void setGenres(Genres genres) {
		this.genres = genres;
	}

	@Column(name = "file_name", nullable = false, length = 250)
	public String getFileName() {
		return this.fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	@Column(name = "title", nullable = false, length = 250)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "lyrics", nullable = false, length = 65535)
	public String getLyrics() {
		return this.lyrics;
	}

	public void setLyrics(String lyrics) {
		this.lyrics = lyrics;
	}

	@Column(name = "artists", nullable = false, length = 250)
	public String getArtists() {
		return this.artists;
	}

	public void setArtists(String artists) {
		this.artists = artists;
	}

	@Column(name = "thumbnail", nullable = false, length = 250)
	public String getThumbnail() {
		return this.thumbnail;
	}

	public void setThumbnail(String thumbnail) {
		this.thumbnail = thumbnail;
	}

	@Column(name = "likes", nullable = false)
	public int getLikes() {
		return this.likes;
	}

	public void setLikes(int likes) {
		this.likes = likes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "song_time", nullable = false, length = 19)
	public Date getSongTime() {
		return this.songTime;
	}

	public void setSongTime(Date songTime) {
		this.songTime = songTime;
	}

	@Column(name = "number_of_listens", nullable = false)
	public int getNumberOfListens() {
		return this.numberOfListens;
	}

	public void setNumberOfListens(int numberOfListens) {
		this.numberOfListens = numberOfListens;
	}

	@Column(name = "isPremium", nullable = false)
	public boolean isIsPremium() {
		return this.isPremium;
	}

	public void setIsPremium(boolean isPremium) {
		this.isPremium = isPremium;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "publish_date", nullable = false, length = 10)
	public Date getPublishDate() {
		return this.publishDate;
	}

	public void setPublishDate(Date publishDate) {
		this.publishDate = publishDate;
	}

	@Column(name = "isHidden", nullable = false)
	public boolean isIsHidden() {
		return this.isHidden;
	}

	public void setIsHidden(boolean isHidden) {
		this.isHidden = isHidden;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "track")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "track")
	public Set<PlaylistTrack> getPlaylistTracks() {
		return this.playlistTracks;
	}

	public void setPlaylistTracks(Set<PlaylistTrack> playlistTracks) {
		this.playlistTracks = playlistTracks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "track")
	public Set<ArtistTrack> getArtistTracks() {
		return this.artistTracks;
	}

	public void setArtistTracks(Set<ArtistTrack> artistTracks) {
		this.artistTracks = artistTracks;
	}

}
